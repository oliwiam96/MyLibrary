@model MyLibrary.Models.BookInLibraryViewModel
@{
    ViewBag.Title = "Książka w bibliotece";
}
@section Styles{
    <link href="@Url.Content("~/Styles/Books/index.css")" rel="stylesheet" type="text/css" />
}

<h2>Książka w bibibliotece</h2>
<div class="media">
    <div class="thumbnail">
        <div class="media-left">
            <img class="media-object" src="@Model.BookInLibrary.Book.UrlPhoto" alt="Cover of a book" id="my_image" />
        </div>
        <div class="media-body">
            <h1><span id="boldH3">@Model.BookInLibrary.Book.Title</span></h1>
            <h3>@Model.BookInLibrary.Book.Author</h3>
            <h4>Właściciel: @Model.BookInLibrary.Library.ApplicationUser.UserName</h4>
            <p></p>
            @{


                if (!Model.IsLent)
                {
                    if (Model.IsCurrentlyReadByMe)
                    {
                        <p>Aktualnie czytana przeze mnie</p>
                        <a href="@Url.Action("EndReading", new { id = Model.BookInLibrary.Id})" class="btn btn-primary">
                            Zakończ czytanie
                        </a>
                    }
                    else if (Model.IsCurrentlyReadBySbElse)
                    {
                        <p>Aktualnie czytana przez: @Model.OtherReaderName</p>
                    }
                    else
                    {
                        <p>Aktualnie czytana: Nie</p>
                        <a href="@Url.Action("StartReading", new { id = Model.BookInLibrary.Id})" class="btn btn-primary">
                            Rozpocznij czytanie
                        </a>

                        using (Html.BeginForm("Rent", "BookInLibraries", new { id = Model.BookInLibrary.Id }, FormMethod.Post, null))
                        {
                            <form class="form-inline">
                                <div class="form-group">
                                    <label for="user">Wypożycz użytkownikowi: </label>
                                </div>
                                <div class="form-group m-5 pb5">
                                    @Html.DropDownListFor(u => u.UserId, Model.Users, null, new { @class = "form-control" })
                                </div>
                                <button type="submit" class="btn btn-info">Wypożycz</button>
                            </form>
                        }
                    }
                }
                else
                {
                    <p> Wypożyczona dla: @Model.BorrowerName </p>
                    <a href="@Url.Action("GiveBackConfirm", new { id = Model.BookInLibrary.Id})" class="btn btn-info">
                        Zgłoś zwrot wypożyczenia
                    </a>
                }
            }
        </div>
    </div>
</div>
@using (Html.BeginForm("AddComment", "BookInLibraries", new { id = Model.BookInLibrary.Id }, FormMethod.Post, null))
{
    <div class="form-group">
        <label for="comment">Komentarz do książki:</label>
        @Html.TextAreaFor(c => c.Comment, new { @class = "form-control", @id = "comment" })
        <button type="Submit" class="btn btn-success" value="AddComment">Dodaj komentarz</button>
    </div>
}

<h3>Czytania</h3>
<table class="table">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">Od</th>
            <th scope="col">Do</th>
            <th scope="col">Nazwa użytkownika</th>
        </tr>

    </thead>
    <tbody>
        @{
            var readings = Model.BookInLibrary.Readings.OrderByDescending(t => (t.EndOfReading ?? DateTime.MaxValue));

            for (int i = 0; i < readings.Count(); i++)
            {
                <tr>
                    <th>@(i + 1)</th>
                    <td>@readings.ElementAt(i).StartOfReading</td>
                    @if (readings.ElementAt(i).EndOfReading != null)
                    {
                        <td>@readings.ElementAt(i).EndOfReading</td>

                    }
                    else
                    {
                        <td>w trakcie</td>
                    }

                    <td>@readings.ElementAt(i).User.UserName</td>
                </tr>
            }
        }

    </tbody>
</table>

<h3>Komentarze</h3>
<table class="table">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">Nazwa użytkownika</th>
            <th scope="col">Treść</th>
        </tr>

    </thead>
    <tbody>
        @{
            var comments = Model.BookInLibrary.Comments.OrderByDescending(c => c.User.UserName);

            for (int i = 0; i < comments.Count(); i++)
            {
                <tr>
                    <th>@(i + 1)</th>
                    <td>@comments.ElementAt(i).User.UserName</td>
                    <td>@comments.ElementAt(i).Text</td>
                </tr>
            }
        }

    </tbody>
</table>

<h3>Wypożyczenia</h3>
<table class="table">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">Nazwa użytkownika</th>
            <th scope="col">Treść</th>
        </tr>

    </thead>
    <tbody>
        @{
            var rentals = Model.BookInLibrary.Rentals.OrderByDescending(t => (t.EndOfRental ?? DateTime.MaxValue));

            for (int i = 0; i < rentals.Count(); i++)
            {
                <tr>
                    <th>@(i + 1)</th>
                    <td>@rentals.ElementAt(i).StartOfRental</td>
                    @if (rentals.ElementAt(i).EndOfRental != null)
                    {
                        <td>@readings.ElementAt(i).EndOfReading</td>

                    }
                    else
                    {
                        <td>w trakcie</td>
                    }

                    <td>@rentals.ElementAt(i).User.UserName</td>
                </tr>
            }
        }

    </tbody>
</table>